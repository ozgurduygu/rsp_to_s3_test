name: Build & Deploy to S3

on: 
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release Type'
        required: true
        default: 'patch' 
        type: choice
        options:
          - major
          - minor
          - patch 
    
env:
  PATCHER_PATH: PatcherWorkspace
  UNITY_BUILD_PATH: ./PatcherWorkspace/App
  UNITY_PROJECT_PATH: DeploymentTest
  UNITY_LIBRARY-PATH: DeploymentTest/Library
  BUILDS_PATH: PatcherWorkspace/Builds
  PATCHES_PATH: PatcherWorkspace/Patches
  AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  unityBuild:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
          - StandaloneOSX
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      
      # - uses: actions/cache@v3
      #   with:
      #     path: ${{ env.UNITY_LIBRARY-PATH }}
      #     key: ${{ env.UNITY_LIBRARY-PATH }}-${{ matrix.targetPlatform }}
      #     restore-keys: ${{ env.UNITY_LIBRARY-PATH }}-
      
      # - uses: game-ci/unity-builder@v2
      #   env:
      #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #   with:
      #     targetPlatform: ${{ matrix.targetPlatform }}
      #     projectPath: ${{ env.UNITY_PROJECT_PATH }}
      #     buildsPath: ${{ env.UNITY_BUILD_PATH }}
      
      - name: Copy Builds from S3
        run: >
          aws s3 cp s3://${{ env.AWS_S3_BUCKET }}/Testing/${{ matrix.targetPlatform }}/Builds/ ${{ env.BUILDS_PATH }} --recursive
          
      - name: Copy Patches from S3
        run: >
          aws s3 cp s3://${{ env.AWS_S3_BUCKET }}/Testing/${{ matrix.targetPlatform }}/Patches/ ${{ env.PATCHES_PATH }} --recursive
      
      - name: Grant patcher permissions.
        working-directory: ${{ env.PATCHER_PATH }}
        run: sudo chmod 777 ./MHLab.Patch.Admin
      
      # - name: Run patcher build command.
      #   working-directory: ${{ env.PATCHER_PATH }}
      #   run: ./MHLab.Patch.Admin build -r ${{ inputs.releaseType }}
      
      # - name: Run patcher patch command.
      #   working-directory: ${{ env.PATCHER_PATH }}
      #   run: ./MHLab.Patch.Admin patch -c 9
        
      - name: Run patcher cleanUp command.
        id: clean-up
        working-directory: ${{ env.PATCHER_PATH }}
        run: ./MHLab.Patch.Admin cleanUp
        
      - name: Get Latest Build Version
        run: echo Latest build was ${{ steps.clean-up.outputs.latestVersion }}
        
      # - name: Sync Builds to S3
      #   run: >
      #     aws s3 sync ${{ env.BUILDS_PATH }} s3://${{ env.AWS_S3_BUCKET }}/Testing/${{ matrix.targetPlatform }}/Builds/ --delete
          
      # - name: Sync Patches to S3
      #   run: >
      #     aws s3 sync ${{ env.PATCHES_PATH }} s3://${{ env.AWS_S3_BUCKET }}/Testing/${{ matrix.targetPlatform }}/Patches/ --delete
        
      

